{"version":3,"sources":["serviceWorker.js","TableExample/table-pagination.js","TableExample/utils.js","TableExample/table.js","TableExample/data.js","TableExample/index.js","UploaderPreview/upload.js","UploaderPreview/image-list.js","UploaderPreview/uploader-preview.js","UploaderPreview/index.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","TablePaginationActions","handleFirstPageButtonClick","_this","props","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","this","classes","theme","react_default","a","createElement","className","root","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","React","Component","objByString","o","s","replace","split","i","n","length","k","DataTable","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","customs","CustomTableCell","withStyles","head","objectSpread","backgroundColor","blue","color","fontSize","headStyle","body","height","rowHeight","bodyStyle","TableCell","CustomPaper","width","overflowX","paperStyle","Paper","CustomTableRow","rowStyle","TableRow","CustomTableSortLabel","&:hover","amber","&:focus","sortStyle","active","TableSortLabel","TablePaginationActionsWrapped","flexShrink","marginLeft","spacing","unit","actionsStyle","withTheme","CustomTablePagination","paginationStyle","TablePagination","CustomCheckbox","&$checked","rowCheckboxStyle","checked","Checkbox","CustomHeaderCheckbox","headCheckboxStyle","state","order","orderBy","selected","headerSelected","onOrderByChange","colName","newOrder","setState","sortData","data","slice","sort","b","columns","sorting","onChangeRowsPerPage","event","target","value","onRowCheckboxChange","name","includes","filter","concat","toConsumableArray","onHeaderCheckboxChange","map","_ref","selectedData","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","col","hasOwnProperty","row","selector","aa","bb","_iterator","Symbol","iterator","next","done","err","return","_this2","_this$customs","_this$state","sortedData","colSpan","keys","emptyRows","min","square","Table_default","padding","tablePadding","TableHead_default","withCheckbox","indeterminate","onChange","_ref3","index","key","align","alingHead","style","Tooltip_default","title","placement","enterDelay","delay","TableBody_default","hover","alignRow","cell","index_es","rowsPerPageOptions","SelectProps","selectProps","labelRowsPerPage","ActionsComponent","cloneElement","children","defaultProps","native","age","job","TableExample","cols","margin","table","Upload","formats","ButtonControl","onFileLoad","maxSize","validFilesArray","component","type","multiple","e","Array","from","files","size","forEach","file","reader","FileReader","onload","ee","readAsDataURL","accept","Button","ImageList","decideCols","len","floor","cellHeight","GridList_default","gridList","entry","GridListTile_default","image","src","alt","GridListTileBar_default","titleBar","actionIcon","icon","Delete_default","display","flexWrap","justifyContent","overflow","maxWidth","maxHeight","background","UploadPreview","subheader","limit","initialItems","_useState","useState","_useState2","slicedToArray","items","setItems","entries","encoding","card","raised","image_list","newItems","upload","hash","SHA1","hex","result","filename","mimetype","Button_default","grey","Uploader","uploader_preview","App","BrowserRouter","Switch","Route","exact","path","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cba7acf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nclass TablePaginationActions extends React.Component {\n  handleFirstPageButtonClick = () => {\n    this.props.onChangePage(0);\n  };\n\n  handleBackButtonClick = () => {\n    this.props.onChangePage(this.props.page - 1);\n  };\n\n  handleNextButtonClick = () => {\n    this.props.onChangePage(this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = () => {\n    this.props.onChangePage(Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1));\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default TablePaginationActions;\n","export default function objByString(o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, '.$1');\n  s = s.replace(/^\\./, '');\n  var a = s.split('.');\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i];\n    if (k in o) {\n      o = o[k];\n    } else {\n      return;\n    }\n  }\n  return o;\n}\n","/* eslint-disable react/default-props-match-prop-types */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { blue, amber } from '@material-ui/core/colors';\nimport { TableFooter, TablePagination, Checkbox } from '@material-ui/core';\nimport TablePaginationActions from './table-pagination';\nimport objByString from './utils';\n\nclass DataTable extends React.Component {\n  customs = {\n    CustomTableCell: withStyles(theme => ({\n      head: {\n        backgroundColor: blue[500],\n        color: 'white',\n        fontSize: 13,\n        ...this.props.headStyle\n      },\n      body: {\n        fontSize: 13,\n        height: this.props.rowHeight,\n        ...this.props.bodyStyle\n      }\n    }))(TableCell),\n    CustomPaper: withStyles(theme => ({\n      root: {\n        width: '100%',\n        overflowX: 'auto',\n        ...this.props.paperStyle\n      }\n    }))(Paper),\n    CustomTableRow: withStyles(theme => ({\n      root: {\n        ...this.props.rowStyle\n      }\n    }))(TableRow),\n    CustomTableSortLabel: withStyles(theme => ({\n      root: {\n        '&:hover': {\n          color: amber[500]\n        },\n        '&:focus': {\n          color: amber[500]\n        },\n        ...this.props.sortStyle\n      },\n      active: {\n        color: amber[500],\n        ...this.props.sortStyle\n      }\n    }))(TableSortLabel),\n    TablePaginationActionsWrapped: withStyles(\n      theme => ({\n        root: {\n          flexShrink: 0,\n          marginLeft: theme.spacing.unit * 2.5,\n          ...this.props.actionsStyle\n        }\n      }),\n      { withTheme: true }\n    )(TablePaginationActions),\n    CustomTablePagination: withStyles(theme => ({\n      root: {\n        color: 'black',\n        ...this.props.paginationStyle\n      }\n    }))(TablePagination),\n    CustomCheckbox: withStyles(theme => ({\n      root: {\n        color: '#000',\n        '&$checked': {\n          color: blue[500]\n        },\n        ...this.props.rowCheckboxStyle\n      },\n      checked: {}\n    }))(Checkbox),\n    CustomHeaderCheckbox: withStyles(theme => ({\n      root: {\n        color: '#FFF',\n        '&$checked': {\n          color: '#FFF'\n        },\n        ...this.props.headCheckboxStyle\n      },\n      checked: {}\n    }))(Checkbox)\n  };\n\n  state = {\n    order: 'desc',\n    orderBy: 0,\n    page: 0,\n    rowsPerPage: 5,\n    selected: [],\n    headerSelected: false\n  };\n\n  constructor(props) {\n    super(props);\n    const { columns } = props;\n    for (const col of columns) {\n      if (!col.hasOwnProperty('cell'))\n        col['cell'] = row => <div>{objByString(row, col.selector)}</div>;\n      if (!col.hasOwnProperty('sorting'))\n        col['sorting'] = (a, b) => {\n          const aa = objByString(a, col.selector);\n          const bb = objByString(b, col.selector);\n          if (aa < bb) return 1;\n          if (aa > bb) return -1;\n          return 0;\n        };\n    }\n    this.columns = columns;\n  }\n\n  onOrderByChange = (order, colName) => {\n    const newOrder = order === 'desc' && colName === this.state.orderBy ? 'asc' : 'desc';\n    this.setState({ order: newOrder, orderBy: colName });\n  };\n\n  sortData = (order, orderBy, page, rowsPerPage) =>\n    this.props.data\n      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      .sort((a, b) =>\n        order === 'asc' ? this.columns[orderBy].sorting(a, b) : -this.columns[orderBy].sorting(a, b)\n      );\n\n  onChangePage = page => {\n    this.setState({ page });\n  };\n\n  onChangeRowsPerPage = event => {\n    this.setState({ page: 0, rowsPerPage: event.target.value });\n  };\n\n  onRowCheckboxChange = name => {\n    const { selected } = this.state;\n    selected.includes(name)\n      ? this.setState({ selected: selected.filter(value => value !== name) })\n      : this.setState({ selected: [...selected, name] });\n  };\n\n  onHeaderCheckboxChange = () => {\n    const { headerSelected } = this.state;\n    const { data } = this.props;\n    headerSelected\n      ? this.setState({ selected: [], headerSelected: !headerSelected })\n      : this.setState({ selected: data.map(({ name }) => name), headerSelected: !headerSelected });\n  };\n\n  selectedData = () => {\n    const { selected } = this.state;\n    const { data } = this.props;\n    return data.filter(({ name }) => selected.includes(name));\n  };\n\n  render() {\n    const {\n      CustomTableCell,\n      CustomPaper,\n      CustomTableRow,\n      CustomTableSortLabel,\n      TablePaginationActionsWrapped,\n      CustomTablePagination,\n      CustomCheckbox,\n      CustomHeaderCheckbox\n    } = this.customs;\n    const { props, columns } = this;\n    const { data } = this.props;\n    const { order, orderBy, page, rowsPerPage, selected, headerSelected } = this.state;\n    const sortedData = this.sortData(order, orderBy, page, rowsPerPage);\n    const colSpan = Object.keys(sortedData[0]).length;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return (\n      <CustomPaper square={props.square}>\n        <Table padding={props.tablePadding}>\n          <TableHead>\n            <CustomTableRow>\n              {props.withCheckbox && (\n                <CustomTableCell padding=\"checkbox\">\n                  <CustomHeaderCheckbox\n                    indeterminate={\n                      headerSelected && selected.length < data.length && selected.length > 0\n                    }\n                    checked={headerSelected}\n                    onChange={this.onHeaderCheckboxChange}\n                  />\n                </CustomTableCell>\n              )}\n              {columns.map(({ name, width }, index) => (\n                <CustomTableCell\n                  key={name}\n                  align={props.alingHead}\n                  style={{\n                    width: width ? width : `${100 / colSpan}%`\n                  }}\n                >\n                  <Tooltip title={`Sort by ${name}`} placement=\"top-start\" enterDelay={props.delay}>\n                    <CustomTableSortLabel\n                      active={index === orderBy}\n                      direction={order}\n                      onClick={() => this.onOrderByChange(order, index)}\n                    >\n                      {name}\n                    </CustomTableSortLabel>\n                  </Tooltip>\n                </CustomTableCell>\n              ))}\n            </CustomTableRow>\n          </TableHead>\n          <TableBody>\n            {sortedData.map((row, index) => (\n              <CustomTableRow key={index} hover={props.hover}>\n                {props.withCheckbox && (\n                  <CustomTableCell padding=\"checkbox\">\n                    <CustomCheckbox\n                      // indeterminate={numSelected > 0 && numSelected < rowCount}\n                      checked={selected.includes(row.name)}\n                      onChange={() => this.onRowCheckboxChange(row.name)}\n                    />\n                  </CustomTableCell>\n                )}\n                {columns.map((col, index) => (\n                  <CustomTableCell key={index} align={props.alignRow}>\n                    {col.cell(row)}\n                  </CustomTableCell>\n                ))}\n              </CustomTableRow>\n            ))}\n            {emptyRows > 0 && (\n              <CustomTableRow style={{ height: props.rowHeight * emptyRows + emptyRows - 2 }}>\n                <CustomTableCell colSpan={colSpan + 1 * props.withCheckbox} />\n              </CustomTableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <CustomTableRow>\n              <CustomTablePagination\n                rowsPerPageOptions={props.rowsPerPageOptions}\n                colSpan={colSpan}\n                count={data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={props.selectProps}\n                onChangePage={this.onChangePage}\n                labelRowsPerPage={props.labelRowsPerPage}\n                onChangeRowsPerPage={this.onChangeRowsPerPage}\n                ActionsComponent={TablePaginationActionsWrapped}\n              />\n              {React.cloneElement(props.children, { selected: this.selectedData() })}\n            </CustomTableRow>\n          </TableFooter>\n        </Table>\n      </CustomPaper>\n    );\n  }\n}\n\nDataTable.propTypes = {\n  headStyle: PropTypes.object,\n  bodyStyle: PropTypes.object,\n  paperStyle: PropTypes.object,\n  rowStyle: PropTypes.object,\n  hover: PropTypes.bool,\n  square: PropTypes.bool,\n  alingHead: PropTypes.string,\n  alignRow: PropTypes.string,\n  tablePadding: PropTypes.string\n};\n\nDataTable.defaultProps = {\n  headStyle: {},\n  bodyStyle: {},\n  paperStyle: {},\n  rowStyle: {},\n  sortStyle: {},\n  actionsStyle: {},\n  paginationStyle: {},\n  rowCheckboxStyle: {},\n  headCheckboxStyle: {},\n  selectProps: {\n    native: false\n  },\n  hover: true,\n  square: false,\n  rowHeight: 50,\n  rowsPerPageOptions: [5, 10, 25],\n  alingHead: 'center',\n  alignRow: 'center',\n  tablePadding: 'none',\n  labelRowsPerPage: 'Rows per page:',\n  delay: 500\n};\n\nexport default DataTable;\n","export const data = [\n  {\n    name: 'Kevin Malone',\n    age: 30,\n    job: 'Accounting'\n  },\n  {\n    name: 'Phyllis Vance, Vance Refrigeration',\n    age: 50,\n    job: 'Sales'\n  },\n  {\n    name: 'Ryan, The Fire Guy',\n    age: 25,\n    job: 'Temp'\n  },\n  {\n    name: 'Michael Scott',\n    age: 44,\n    job: 'Manager'\n  },\n  {\n    name: 'Pam Beasley',\n    age: 30,\n    job: 'Sales'\n  },\n  {\n    name: 'Erin',\n    age: 25,\n    job: 'Receptionist'\n  },\n  {\n    name: 'Jim Halper',\n    age: 33,\n    job: 'Sales'\n  },\n  {\n    name: 'Stanley',\n    age: 50,\n    job: 'Sales'\n  },\n  {\n    name: 'Creed Bratton',\n    age: 55,\n    job: 'Quality assurance'\n  },\n  {\n    name: 'Stanley',\n    age: 50,\n    job: 'Sales'\n  },\n  {\n    name: 'Creed Bratton',\n    age: 55,\n    job: 'Quality assurance'\n  }\n];\n","import React from 'react';\nimport Table from './table';\nimport { data } from './data';\n\nexport default function TableExample(props) {\n  const cols = [\n    {\n      name: 'Name',\n      selector: 'name'\n    },\n    {\n      name: 'Job',\n      selector: 'job'\n    },\n    {\n      name: 'Age',\n      selector: 'age',\n      cell: row => <div>{`${row.age} years old`}</div>\n    }\n  ];\n\n  const Chill = props => {\n    const { selected } = props;\n    return <div>I can be what I want</div>;\n  };\n\n  return (\n    <div\n      style={{\n        width: '60%',\n        margin: '0 auto',\n        padding: 50\n      }}\n    >\n      <Table withCheckbox data={data} columns={cols}>\n        <Chill />\n      </Table>\n    </div>\n  );\n}\n","// *-* mode: rjsx -*-\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nfunction Upload(props) {\n  const { formats, ButtonControl, onFileLoad, maxSize } = props;\n\n  const getValidFiles = () => {\n    if (formats === 'image/*') return ['image/jpg', 'image/png', 'image/jpeg'];\n    return formats;\n  };\n\n  const validFilesArray = getValidFiles();\n\n  const onInputChange = e => {\n    Array.from(e.target.files)\n      .filter(({ type, size }) => size <= maxSize && validFilesArray.includes(type))\n      .forEach(file => {\n        const reader = new FileReader();\n        reader.onload = ee => onFileLoad(ee, file);\n        reader.readAsDataURL(file);\n      });\n  };\n\n  return (\n    <ButtonControl component=\"span\">\n      <input type=\"file\" multiple onChange={onInputChange} accept={formats} />\n    </ButtonControl>\n  );\n}\n\nUpload.defaultProps = {\n  formats: 'image/*',\n  onFileLoad: e => undefined,\n  ButtonControl: Button,\n  maxSize: 3000000\n};\n\nUpload.propTypes = {\n  formats: PropTypes.string,\n  onFileLoad: PropTypes.func,\n  ButtonControl: PropTypes.func,\n  maxSize: PropTypes.number\n};\n\nexport default Upload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    overflow: 'hidden'\n  },\n  gridList: {\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  titleBar: {\n    background: 'rgba(255, 255, 255, 0.0)'\n  }\n});\n\nfunction ImageList(props) {\n  const { classes } = props;\n\n  const decideCols = (len, cols, index) => {\n    let size = 1;\n    const row = Math.floor(index / cols);\n    if (len > row + cols) return size;\n    const imagesOnRow = len - row * cols;\n    const rowIndex = index - row * cols;\n    const colsLeft = cols - imagesOnRow;\n    if (rowIndex < colsLeft) size += 1;\n    return size;\n  };\n\n  const { cellHeight, cols, data, onClick } = props;\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={cellHeight} className={classes.gridList} cols={cols}>\n        {data.map((entry, index) => (\n          <GridListTile key={entry.image} cols={decideCols(data.length, props.cols, index)}>\n            <img src={entry.image} alt=\"Your place here\" />\n            <GridListTileBar\n              className={classes.titleBar}\n              actionIcon={\n                // eslint-disable-next-line react/jsx-wrap-multilines\n                <IconButton className={classes.icon} onClick={() => onClick(entry.key)}>\n                  <DeleteIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nImageList.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  classes: PropTypes.object.isRequired,\n  cols: PropTypes.number,\n  cellHeight: PropTypes.number,\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nImageList.defaultProps = {\n  cols: 2,\n  cellHeight: 160\n};\n\nexport default withStyles(styles)(ImageList);\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardActions, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { grey } from '@material-ui/core/colors';\nimport { SHA1 } from 'jshashes';\nimport Upload from './upload';\nimport ImageList from './image-list';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n    backgroundColor: grey[300]\n  },\n  image: {\n    height: '100%'\n  }\n});\n\nfunction UploadPreview(props) {\n  const { classes, title, subheader, formats, limit, initialItems, maxSize } = props;\n  const [items, setItems] = useState(initialItems);\n\n  const onFileLoad = (e, file) => {\n    const hash = new SHA1().hex(e.target.result);\n    const newItems = items;\n    if (Object.keys(newItems).length < limit)\n      newItems[hash] = {\n        filename: file.name,\n        mimetype: file.type,\n        encoding: e.target.result\n      };\n    setItems({ ...newItems });\n    props.onFileLoad(e, file);\n    props.onChange(items);\n  };\n\n  const onRemoveAllClick = () => {\n    setItems({});\n    props.onChange({});\n  };\n\n  const onRemoveClick = key => {\n    const newItems = items;\n    delete newItems[key];\n    setItems({ ...newItems });\n    props.onChange(items);\n  };\n\n  const data = Object.entries(items).map(([key, value]) => ({\n    key,\n    image: value.encoding\n  }));\n  return (\n    <Card className={classes.card} raised>\n      <CardHeader title={title} subheader={subheader} />\n      <CardContent className={classes.card}>\n        <ImageList data={data} onClick={onRemoveClick} />\n      </CardContent>\n      <CardActions>\n        {/* ADD BUTTON */}\n        <Upload\n          onFileLoad={onFileLoad}\n          key={Object.keys(items).length}\n          formats={formats}\n          maxSize={maxSize}\n        />\n        {/* REMOVE BUTTON */}\n        {Object.keys(items).length > 0 && <Button onClick={onRemoveAllClick}>Remove all</Button>}\n      </CardActions>\n    </Card>\n  );\n}\n\nUploadPreview.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  subheader: PropTypes.string,\n  formats: PropTypes.string,\n  onFileLoad: PropTypes.func,\n  onChange: PropTypes.func,\n  initialItems: PropTypes.object,\n  maxSize: PropTypes.number,\n  limit: PropTypes.number\n};\n\nUploadPreview.defaultProps = {\n  title: '',\n  subheader: 'Max 4 photos of 3MB each.',\n  formats: 'image/*',\n  onFileLoad: (e, file) => undefined,\n  onChange: items => undefined,\n  initialItems: {},\n  maxSize: 3000000,\n  limit: 4\n};\n\nexport default withStyles(styles)(UploadPreview);\n","import React from 'react';\nimport UploaderPreview from './uploader-preview';\n\nexport default function Uploader(props) {\n  return (\n    <div style={{ width: '33%', margin: '150px auto' }}>\n      <UploaderPreview title=\"Upload your images\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TableExample from './TableExample';\nimport Uploader from './UploaderPreview';\n\nfunction App(props) {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/table\" component={TableExample} />\n        <Route exact path=\"/uploader\" component={Uploader} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './router';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}